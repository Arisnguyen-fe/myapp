{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action_type",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "created_at",
          "type": "uint256"
        }
      ],
      "name": "ActionLogged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action_type",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "created_at",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "treatment",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "referral",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "research",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct LogAudits.Consent",
          "name": "granted_consent",
          "type": "tuple"
        }
      ],
      "name": "PatientLogged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "addDiagnosis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "assignTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "authorizeProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "referToDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_treatmentConsent",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_referralConsent",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_researchConsent",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "submitSymptom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "updateTestResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/LogAudits.sol"
  },
  "ast": {
    "absolutePath": "contracts/LogAudits.sol",
    "exportedSymbols": {
      "LogAudits": [
        206
      ]
    },
    "id": 207,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LogAudits",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 206,
        "linearizedBaseContracts": [
          206
        ],
        "name": "LogAudits",
        "nameLocation": "66:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LogAudits.Consent",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "treatment",
                "nameLocation": "161:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "156:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "156:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "referral",
                "nameLocation": "185:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "180:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "180:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "research",
                "nameLocation": "208:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "203:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Consent",
            "nameLocation": "138:7:0",
            "nodeType": "StructDefinition",
            "scope": 206,
            "src": "131:92:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "userConsent",
            "nameLocation": "326:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 206,
            "src": "290:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Consent_$8_storage_$",
              "typeString": "mapping(address => struct LogAudits.Consent)"
            },
            "typeName": {
              "id": 12,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "298:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "290:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Consent_$8_storage_$",
                "typeString": "mapping(address => struct LogAudits.Consent)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10,
                  "name": "Consent",
                  "nameLocations": [
                    "309:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8,
                  "src": "309:7:0"
                },
                "referencedDeclaration": 8,
                "src": "309:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Consent_$8_storage_ptr",
                  "typeString": "struct LogAudits.Consent"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "authorizedProviders",
            "nameLocation": "465:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 206,
            "src": "432:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 16,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "440:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "432:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 15,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "451:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "baf4064c4bce11ab1664ab198d1f4c3902389a7fe4a40279db2d522716fb729b",
            "id": 30,
            "name": "PatientLogged",
            "nameLocation": "538:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "577:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "561:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "643:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "636:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "action_type",
                  "nameLocation": "739:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "732:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "created_at",
                  "nameLocation": "841:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "833:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "granted_consent",
                  "nameLocation": "909:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "901:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Consent_$8_memory_ptr",
                    "typeString": "struct LogAudits.Consent"
                  },
                  "typeName": {
                    "id": 27,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 26,
                      "name": "Consent",
                      "nameLocations": [
                        "901:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8,
                      "src": "901:7:0"
                    },
                    "referencedDeclaration": 8,
                    "src": "901:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Consent_$8_storage_ptr",
                      "typeString": "struct LogAudits.Consent"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:444:0"
            },
            "src": "532:464:0"
          },
          {
            "anonymous": false,
            "eventSelector": "5b56e6ffbe95b7f92c787b65102287621b8b2f70e10bdf8c52f38ba60adaadfe",
            "id": 40,
            "name": "ActionLogged",
            "nameLocation": "1008:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1046:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1030:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1112:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1105:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "action_type",
                  "nameLocation": "1208:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1201:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "created_at",
                  "nameLocation": "1310:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1302:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:306:0"
            },
            "src": "1002:325:0"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1341:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 206,
            "src": "1333:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1333:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1374:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1392:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1396:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1392:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 47,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1406:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1392:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20706572666f726d20746869732066756e6374696f6e",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1413:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec00d18507973ffca613b667bdf0d2bdad0a4adcd1a64c2850ccae32e69f84",
                          "typeString": "literal_string \"Only owner can perform this function\""
                        },
                        "value": "Only owner can perform this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec00d18507973ffca613b667bdf0d2bdad0a4adcd1a64c2850ccae32e69f84",
                          "typeString": "literal_string \"Only owner can perform this function\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1384:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:68:0"
                },
                {
                  "id": 52,
                  "nodeType": "PlaceholderStatement",
                  "src": "1462:1:0"
                }
              ]
            },
            "id": 54,
            "name": "onlyOwner",
            "nameLocation": "1362:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:2:0"
            },
            "src": "1353:117:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1510:98:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 57,
                          "name": "authorizedProviders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1528:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 60,
                        "indexExpression": {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1548:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1552:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1548:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1528:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e20617574686f72697a65642070726f7669646572",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cde5db5023ed9e2ea499f4b0c477a15408608beaab38d406e8e4d2ae56f22472",
                          "typeString": "literal_string \"Not an authorized provider\""
                        },
                        "value": "Not an authorized provider"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cde5db5023ed9e2ea499f4b0c477a15408608beaab38d406e8e4d2ae56f22472",
                          "typeString": "literal_string \"Not an authorized provider\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:70:0"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "1600:1:0"
                }
              ]
            },
            "id": 66,
            "name": "onlyAuthorizedProvider",
            "nameLocation": "1485:22:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:2:0"
            },
            "src": "1476:132:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1628:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1638:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 70,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1646:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1650:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1646:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1638:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1638:18:0"
                }
              ]
            },
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:0:0"
            },
            "scope": 206,
            "src": "1614:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1719:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1736:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 79,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "1729:12:0"
                }
              ]
            },
            "functionSelector": "893d20e8",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nameLocation": "1678:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:2:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1710:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1709:9:0"
            },
            "scope": 206,
            "src": "1669:79:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1816:54:0",
              "statements": [
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 90,
                        "name": "authorizedProviders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1826:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "id": 91,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1846:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1826:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1858:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1826:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:36:0"
                }
              ]
            },
            "functionSelector": "112ea262",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1806:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54,
                  "src": "1806:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1806:9:0"
              }
            ],
            "name": "authorizeProvider",
            "nameLocation": "1763:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1789:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1781:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:18:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:0:0"
            },
            "scope": 206,
            "src": "1754:116:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2105:648:0",
              "statements": [
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 108,
                        "name": "userConsent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2171:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Consent_$8_storage_$",
                          "typeString": "mapping(address => struct LogAudits.Consent storage ref)"
                        }
                      },
                      "id": 111,
                      "indexExpression": {
                        "expression": {
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2183:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2187:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2183:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2171:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Consent_$8_storage",
                        "typeString": "struct LogAudits.Consent storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 113,
                          "name": "_treatmentConsent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "2230:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 114,
                          "name": "_referralConsent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2271:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 115,
                          "name": "_researchConsent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "2311:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 112,
                        "name": "Consent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2197:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Consent_$8_storage_ptr_$",
                          "typeString": "type(struct LogAudits.Consent storage pointer)"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2219:9:0",
                        "2261:8:0",
                        "2301:8:0"
                      ],
                      "names": [
                        "treatment",
                        "referral",
                        "research"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2197:141:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Consent_$8_memory_ptr",
                        "typeString": "struct LogAudits.Consent memory"
                      }
                    },
                    "src": "2171:167:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Consent_$8_storage",
                      "typeString": "struct LogAudits.Consent storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:167:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2438:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2442:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2438:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 122,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2462:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7375626d69745f73796d70746f6d",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2536:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f563abb18f241114833bd1703efa6ae3d91d3bf94a0a11a0525d4e2d08dd0557",
                          "typeString": "literal_string \"submit_symptom\""
                        },
                        "value": "submit_symptom"
                      },
                      {
                        "expression": {
                          "id": 124,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2611:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2617:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2611:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 126,
                          "name": "userConsent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2682:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Consent_$8_storage_$",
                            "typeString": "mapping(address => struct LogAudits.Consent storage ref)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "expression": {
                            "id": 127,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2694:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2698:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2694:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2682:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Consent_$8_storage",
                          "typeString": "struct LogAudits.Consent storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f563abb18f241114833bd1703efa6ae3d91d3bf94a0a11a0525d4e2d08dd0557",
                          "typeString": "literal_string \"submit_symptom\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Consent_$8_storage",
                          "typeString": "struct LogAudits.Consent storage ref"
                        }
                      ],
                      "id": 119,
                      "name": "PatientLogged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2411:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_struct$_Consent_$8_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256,struct LogAudits.Consent memory)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:335:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "EmitStatement",
                  "src": "2406:340:0"
                }
              ]
            },
            "functionSelector": "8fd1fd10",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitSymptom",
            "nameLocation": "1955:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_treatmentConsent",
                  "nameLocation": "1983:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1978:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_referralConsent",
                  "nameLocation": "2015:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2010:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_researchConsent",
                  "nameLocation": "2046:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2041:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "2086:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2072:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:129:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2105:0:0"
            },
            "scope": 206,
            "src": "1946:807:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "2925:146:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2966:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 144,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2985:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6164645f646961676e6f736973",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3005:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffff4e3e74222f5d1d676fc579d0f1834ed5b8d345e987de291c4d667ac8e040",
                          "typeString": "literal_string \"add_diagnosis\""
                        },
                        "value": "add_diagnosis"
                      },
                      {
                        "expression": {
                          "id": 146,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3035:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3041:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3035:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffff4e3e74222f5d1d676fc579d0f1834ed5b8d345e987de291c4d667ac8e040",
                          "typeString": "literal_string \"add_diagnosis\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 142,
                      "name": "ActionLogged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2940:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:124:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "EmitStatement",
                  "src": "2935:129:0"
                }
              ]
            },
            "functionSelector": "8445ffb8",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 139,
                  "name": "onlyAuthorizedProvider",
                  "nameLocations": [
                    "2902:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "2902:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2902:22:0"
              }
            ],
            "name": "addDiagnosis",
            "nameLocation": "2847:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2868:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2860:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "2888:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2874:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:35:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2925:0:0"
            },
            "scope": 206,
            "src": "2838:233:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "3254:135:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 161,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "3295:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 162,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "3314:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "72656665725f746f5f646f63746f72",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3334:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b876305088622c8afff3cc9b163d49bba8428e86eb300129ca8f23c8bee044f",
                          "typeString": "literal_string \"refer_to_doctor\""
                        },
                        "value": "refer_to_doctor"
                      },
                      {
                        "expression": {
                          "id": 164,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3366:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3372:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3366:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b876305088622c8afff3cc9b163d49bba8428e86eb300129ca8f23c8bee044f",
                          "typeString": "literal_string \"refer_to_doctor\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 160,
                      "name": "ActionLogged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3269:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "3264:118:0"
                }
              ]
            },
            "functionSelector": "b451c622",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 157,
                  "name": "onlyAuthorizedProvider",
                  "nameLocations": [
                    "3231:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "3231:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3231:22:0"
              }
            ],
            "name": "referToDoctor",
            "nameLocation": "3175:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3197:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "3189:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "3217:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "3203:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3203:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:35:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3254:0:0"
            },
            "scope": 206,
            "src": "3166:223:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "3559:131:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 179,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "3600:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 180,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "3619:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "61737369676e5f74657374",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3639:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22388beebcc6a9a960f6849556dc34d670e021537bd6d6d7ea3ae69a2371b369",
                          "typeString": "literal_string \"assign_test\""
                        },
                        "value": "assign_test"
                      },
                      {
                        "expression": {
                          "id": 182,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3667:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3673:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3667:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22388beebcc6a9a960f6849556dc34d670e021537bd6d6d7ea3ae69a2371b369",
                          "typeString": "literal_string \"assign_test\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 178,
                      "name": "ActionLogged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3574:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "EmitStatement",
                  "src": "3569:114:0"
                }
              ]
            },
            "functionSelector": "b00efd35",
            "id": 187,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 175,
                  "name": "onlyAuthorizedProvider",
                  "nameLocations": [
                    "3536:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "3536:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3536:22:0"
              }
            ],
            "name": "assignTest",
            "nameLocation": "3483:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3502:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "3494:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "3522:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "3508:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:35:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:0:0"
            },
            "scope": 206,
            "src": "3474:216:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "3875:139:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 197,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "3916:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 198,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3935:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7570646174655f746573745f726573756c7473",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3955:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13f688a72e112cfd498c1df18c327cdead470b3e27f0920acb42bddce42776b7",
                          "typeString": "literal_string \"update_test_results\""
                        },
                        "value": "update_test_results"
                      },
                      {
                        "expression": {
                          "id": 200,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3991:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3997:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3991:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13f688a72e112cfd498c1df18c327cdead470b3e27f0920acb42bddce42776b7",
                          "typeString": "literal_string \"update_test_results\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 196,
                      "name": "ActionLogged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3890:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3890:117:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "EmitStatement",
                  "src": "3885:122:0"
                }
              ]
            },
            "functionSelector": "a6a70f66",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 193,
                  "name": "onlyAuthorizedProvider",
                  "nameLocations": [
                    "3852:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "3852:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3852:22:0"
              }
            ],
            "name": "updateTestResults",
            "nameLocation": "3792:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3818:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "3810:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3810:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "3838:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "3824:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3824:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3809:35:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3875:0:0"
            },
            "scope": 206,
            "src": "3783:231:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 207,
        "src": "57:3959:0",
        "usedErrors": [],
        "usedEvents": [
          30,
          40
        ]
      }
    ],
    "src": "32:3985:0"
  },
  "bytecode": "6080604052348015600f57600080fd5b50600280546001600160a01b031916331790556107de806100316000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638fd1fd101161005b5780638fd1fd10146100c9578063a6a70f66146100dc578063b00efd35146100ef578063b451c6221461010257600080fd5b8063112ea262146100825780638445ffb814610097578063893d20e8146100aa575b600080fd5b6100956100903660046103d8565b610115565b005b6100956100a536600461049f565b6101a7565b600254604080516001600160a01b039092168252519081900360200190f35b6100956100d73660046104fd565b61020b565b6100956100ea36600461049f565b6102b4565b6100956100fd36600461049f565b61030c565b61009561011036600461049f565b610364565b6002546001600160a01b031633146101805760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79206f776e65722063616e20706572666f726d20746869732066756e636044820152633a34b7b760e11b60648201526084015b60405180910390fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff166101d65760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff9291906105e9565b60405180910390a25050565b6040805160608101825285151581528415156020808301918252851515838501908152336000818152928390529185902093518454935191511515620100000262ff0000199215156101000261ff00199215159290921661ffff1990951694909417171691909117825591517fbaf4064c4bce11ab1664ab198d1f4c3902389a7fe4a40279db2d522716fb729b916102a69185914291610632565b60405180910390a250505050565b3360009081526001602052604090205460ff166102e35760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff9291906106a7565b3360009081526001602052604090205460ff1661033b5760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff9291906106f6565b3360009081526001602052604090205460ff166103935760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff92919061073d565b80356001600160a01b03811681146103d357600080fd5b919050565b6000602082840312156103ea57600080fd5b6103f3826103bc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261042157600080fd5b813567ffffffffffffffff81111561043b5761043b6103fa565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561046a5761046a6103fa565b60405281815283820160200185101561048257600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104b257600080fd5b6104bb836103bc565b9150602083013567ffffffffffffffff8111156104d757600080fd5b6104e385828601610410565b9150509250929050565b803580151581146103d357600080fd5b6000806000806080858703121561051357600080fd5b61051c856104ed565b935061052a602086016104ed565b9250610538604086016104ed565b9150606085013567ffffffffffffffff81111561055457600080fd5b61056087828801610410565b91505092959194509250565b6020808252601a908201527f4e6f7420616e20617574686f72697a65642070726f7669646572000000000000604082015260600190565b6000815180845260005b818110156105c9576020818501810151868301820152016105ad565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006105fc60608301856105a3565b8281036020840152600d81526c6164645f646961676e6f73697360981b6020820152604081019150508260408301529392505050565b60c08152600061064560c08301866105a3565b8281036020840152600e81526d7375626d69745f73796d70746f6d60901b602082015260408101915050836040830152825460ff81161515606084015260ff8160081c161515608084015260ff8160101c16151560a084015250949350505050565b6060815260006106ba60608301856105a3565b828103602084015260138152727570646174655f746573745f726573756c747360681b6020820152604081019150508260408301529392505050565b60608152600061070960608301856105a3565b8281036020840152600b81526a185cdcda59db97dd195cdd60aa1b6020820152604081019150508260408301529392505050565b60608152600061075060608301856105a3565b8281036020840152600f81526e3932b332b92fba37afb237b1ba37b960891b602082015260408101915050826040830152939250505056fe5b56e6ffbe95b7f92c787b65102287621b8b2f70e10bdf8c52f38ba60adaadfea26469706673582212205510dc99ca08c9df720d13ee5d1b8b706f6f2a7af2cd689ee886a4c6e9562ab564736f6c634300081e0033",
  "bytecodeSha1": "d6660aca544e0fc0f5e7d44c947b8e45d09d1441",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.30+commit.73712a01"
  },
  "contractName": "LogAudits",
  "coverageMap": {
    "branches": {
      "0": {
        "LogAudits.referToDoctor": {
          "8": [
            1528,
            1559,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "LogAudits.addDiagnosis": {
          "2": [
            2935,
            3064
          ]
        },
        "LogAudits.assignTest": {
          "6": [
            3569,
            3683
          ]
        },
        "LogAudits.authorizeProvider": {
          "1": [
            1826,
            1862
          ]
        },
        "LogAudits.getOwner": {
          "0": [
            1729,
            1741
          ]
        },
        "LogAudits.referToDoctor": {
          "7": [
            3264,
            3382
          ]
        },
        "LogAudits.submitSymptom": {
          "3": [
            2171,
            2338
          ],
          "4": [
            2406,
            2746
          ]
        },
        "LogAudits.updateTestResults": {
          "5": [
            3885,
            4007
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638fd1fd101161005b5780638fd1fd10146100c9578063a6a70f66146100dc578063b00efd35146100ef578063b451c6221461010257600080fd5b8063112ea262146100825780638445ffb814610097578063893d20e8146100aa575b600080fd5b6100956100903660046103d8565b610115565b005b6100956100a536600461049f565b6101a7565b600254604080516001600160a01b039092168252519081900360200190f35b6100956100d73660046104fd565b61020b565b6100956100ea36600461049f565b6102b4565b6100956100fd36600461049f565b61030c565b61009561011036600461049f565b610364565b6002546001600160a01b031633146101805760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79206f776e65722063616e20706572666f726d20746869732066756e636044820152633a34b7b760e11b60648201526084015b60405180910390fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff166101d65760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff9291906105e9565b60405180910390a25050565b6040805160608101825285151581528415156020808301918252851515838501908152336000818152928390529185902093518454935191511515620100000262ff0000199215156101000261ff00199215159290921661ffff1990951694909417171691909117825591517fbaf4064c4bce11ab1664ab198d1f4c3902389a7fe4a40279db2d522716fb729b916102a69185914291610632565b60405180910390a250505050565b3360009081526001602052604090205460ff166102e35760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff9291906106a7565b3360009081526001602052604090205460ff1661033b5760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff9291906106f6565b3360009081526001602052604090205460ff166103935760405162461bcd60e51b81526004016101779061056c565b816001600160a01b031660008051602061078983398151915282426040516101ff92919061073d565b80356001600160a01b03811681146103d357600080fd5b919050565b6000602082840312156103ea57600080fd5b6103f3826103bc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261042157600080fd5b813567ffffffffffffffff81111561043b5761043b6103fa565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561046a5761046a6103fa565b60405281815283820160200185101561048257600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104b257600080fd5b6104bb836103bc565b9150602083013567ffffffffffffffff8111156104d757600080fd5b6104e385828601610410565b9150509250929050565b803580151581146103d357600080fd5b6000806000806080858703121561051357600080fd5b61051c856104ed565b935061052a602086016104ed565b9250610538604086016104ed565b9150606085013567ffffffffffffffff81111561055457600080fd5b61056087828801610410565b91505092959194509250565b6020808252601a908201527f4e6f7420616e20617574686f72697a65642070726f7669646572000000000000604082015260600190565b6000815180845260005b818110156105c9576020818501810151868301820152016105ad565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006105fc60608301856105a3565b8281036020840152600d81526c6164645f646961676e6f73697360981b6020820152604081019150508260408301529392505050565b60c08152600061064560c08301866105a3565b8281036020840152600e81526d7375626d69745f73796d70746f6d60901b602082015260408101915050836040830152825460ff81161515606084015260ff8160081c161515608084015260ff8160101c16151560a084015250949350505050565b6060815260006106ba60608301856105a3565b828103602084015260138152727570646174655f746573745f726573756c747360681b6020820152604081019150508260408301529392505050565b60608152600061070960608301856105a3565b8281036020840152600b81526a185cdcda59db97dd195cdd60aa1b6020820152604081019150508260408301529392505050565b60608152600061075060608301856105a3565b8281036020840152600f81526e3932b332b92fba37afb237b1ba37b960891b602082015260408101915050826040830152939250505056fe5b56e6ffbe95b7f92c787b65102287621b8b2f70e10bdf8c52f38ba60adaadfea26469706673582212205510dc99ca08c9df720d13ee5d1b8b706f6f2a7af2cd689ee886a4c6e9562ab564736f6c634300081e0033",
  "deployedSourceMap": "57:3959:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1754:116;;;;;;:::i;:::-;;:::i;:::-;;2838:233;;;;;;:::i;:::-;;:::i;1669:79::-;1736:5;;1669:79;;;-1:-1:-1;;;;;1736:5:0;;;1793:51:1;;1669:79:0;;;;;1781:2:1;1669:79:0;;;1946:807;;;;;;:::i;:::-;;:::i;3783:231::-;;;;;;:::i;:::-;;:::i;3474:216::-;;;;;;:::i;:::-;;:::i;3166:223::-;;;;;;:::i;:::-;;:::i;1754:116::-;1406:5;;-1:-1:-1;;;;;1406:5:0;1392:10;:19;1384:68;;;;-1:-1:-1;;;1384:68:0;;2754:2:1;1384:68:0;;;2736:21:1;2793:2;2773:18;;;2766:30;2832:34;2812:18;;;2805:62;-1:-1:-1;;;2883:18:1;;;2876:34;2927:19;;1384:68:0;;;;;;;;;-1:-1:-1;;;;;1826:29:0::1;;::::0;;;1858:4:::1;1826:29;::::0;;;;;;;:36;;-1:-1:-1;;1826:36:0::1;::::0;;::::1;::::0;;1754:116::o;2838:233::-;1548:10;1528:31;;;;:19;:31;;;;;;;;1520:70;;;;-1:-1:-1;;;1520:70:0;;;;;;;:::i;:::-;2966:4:::1;-1:-1:-1::0;;;;;2940:124:0::1;-1:-1:-1::0;;;;;;;;;;;2985:5:0::1;3035:15;2940:124;;;;;;;:::i;:::-;;;;;;;;2838:233:::0;;:::o;1946:807::-;2197:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:10;-1:-1:-1;2171:23:0;;;;;;;;;;;:167;;;;;;;;;;;;-1:-1:-1;;2171:167:0;;;;;-1:-1:-1;;2171:167:0;;;;;;;-1:-1:-1;;2171:167:0;;;;;;;;;;;;;;;2411:335;;;;;;2462:5;;2611:15;;2411:335;:::i;:::-;;;;;;;;1946:807;;;;:::o;3783:231::-;1548:10;1528:31;;;;:19;:31;;;;;;;;1520:70;;;;-1:-1:-1;;;1520:70:0;;;;;;;:::i;:::-;3916:4:::1;-1:-1:-1::0;;;;;3890:117:0::1;-1:-1:-1::0;;;;;;;;;;;3935:5:0::1;3991:15;3890:117;;;;;;;:::i;3474:216::-:0;1548:10;1528:31;;;;:19;:31;;;;;;;;1520:70;;;;-1:-1:-1;;;1520:70:0;;;;;;;:::i;:::-;3600:4:::1;-1:-1:-1::0;;;;;3574:109:0::1;-1:-1:-1::0;;;;;;;;;;;3619:5:0::1;3667:15;3574:109;;;;;;;:::i;3166:223::-:0;1548:10;1528:31;;;;:19;:31;;;;;;;;1520:70;;;;-1:-1:-1;;;1520:70:0;;;;;;;:::i;:::-;3295:4:::1;-1:-1:-1::0;;;;;3269:113:0::1;-1:-1:-1::0;;;;;;;;;;;3314:5:0::1;3366:15;3269:113;;;;;;;:::i;14:173:1:-:0;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:726;558:5;611:3;604:4;596:6;592:17;588:27;578:55;;629:1;626;619:12;578:55;669:6;656:20;699:18;691:6;688:30;685:56;;;721:18;;:::i;:::-;770:2;764:9;862:2;824:17;;-1:-1:-1;;820:31:1;;;853:2;816:40;812:54;800:67;;897:18;882:34;;918:22;;;879:62;876:88;;;944:18;;:::i;:::-;980:2;973:22;1004;;;1045:19;;;1066:4;1041:30;1038:39;-1:-1:-1;1035:59:1;;;1090:1;1087;1080:12;1035:59;1154:6;1147:4;1139:6;1135:17;1128:4;1120:6;1116:17;1103:58;1209:1;1181:19;;;1202:4;1177:30;1170:41;;;;1185:6;515:726;-1:-1:-1;;;515:726:1:o;1246:396::-;1324:6;1332;1385:2;1373:9;1364:7;1360:23;1356:32;1353:52;;;1401:1;1398;1391:12;1353:52;1424:29;1443:9;1424:29;:::i;:::-;1414:39;;1504:2;1493:9;1489:18;1476:32;1531:18;1523:6;1520:30;1517:50;;;1563:1;1560;1553:12;1517:50;1586;1628:7;1619:6;1608:9;1604:22;1586:50;:::i;:::-;1576:60;;;1246:396;;;;;:::o;1855:160::-;1920:20;;1976:13;;1969:21;1959:32;;1949:60;;2005:1;2002;1995:12;2020:527;2107:6;2115;2123;2131;2184:3;2172:9;2163:7;2159:23;2155:33;2152:53;;;2201:1;2198;2191:12;2152:53;2224:26;2240:9;2224:26;:::i;:::-;2214:36;;2269:35;2300:2;2289:9;2285:18;2269:35;:::i;:::-;2259:45;;2323:35;2354:2;2343:9;2339:18;2323:35;:::i;:::-;2313:45;;2409:2;2398:9;2394:18;2381:32;2436:18;2428:6;2425:30;2422:50;;;2468:1;2465;2458:12;2422:50;2491;2533:7;2524:6;2513:9;2509:22;2491:50;:::i;:::-;2481:60;;;2020:527;;;;;;;:::o;2957:350::-;3159:2;3141:21;;;3198:2;3178:18;;;3171:30;3237:28;3232:2;3217:18;;3210:56;3298:2;3283:18;;2957:350::o;3312:400::-;3354:3;3392:5;3386:12;3419:6;3414:3;3407:19;3444:1;3454:139;3468:6;3465:1;3462:13;3454:139;;;3576:4;3561:13;;;3557:24;;3551:31;3531:11;;;3527:22;;3520:63;3483:12;3454:139;;;3458:3;3638:1;3631:4;3622:6;3617:3;3613:16;3609:27;3602:38;3701:4;3694:2;3690:7;3685:2;3677:6;3673:15;3669:29;3664:3;3660:39;3656:50;3649:57;;;3312:400;;;;:::o;3717:565::-;3995:2;3984:9;3977:21;3958:4;4021:45;4062:2;4051:9;4047:18;4039:6;4021:45;:::i;:::-;4114:9;4106:6;4102:22;4097:2;4086:9;4082:18;4075:50;4149:2;4141:6;4134:18;-1:-1:-1;;;4180:2:1;4172:6;4168:15;4161:40;4230:2;4222:6;4218:15;4210:23;;;4269:6;4264:2;4253:9;4249:18;4242:34;3717:565;;;;;:::o;4287:914::-;4634:3;4623:9;4616:22;4597:4;4661:46;4702:3;4691:9;4687:19;4679:6;4661:46;:::i;:::-;4755:9;4747:6;4743:22;4738:2;4727:9;4723:18;4716:50;4790:2;4782:6;4775:18;-1:-1:-1;;;4821:2:1;4813:6;4809:15;4802:41;4872:2;4864:6;4860:15;4852:23;;;4911:6;4906:2;4895:9;4891:18;4884:34;4950:6;4944:13;5022:4;5011:9;5007:20;5000:28;4993:36;4988:2;4977:9;4973:18;4966:64;5104:4;5092:9;5089:1;5085:17;5081:28;5074:36;5067:44;5061:3;5050:9;5046:19;5039:73;5187:4;5175:9;5171:2;5167:18;5163:29;5156:37;5149:45;5143:3;5132:9;5128:19;5121:74;;4287:914;;;;;;:::o;5206:571::-;5484:2;5473:9;5466:21;5447:4;5510:45;5551:2;5540:9;5536:18;5528:6;5510:45;:::i;:::-;5603:9;5595:6;5591:22;5586:2;5575:9;5571:18;5564:50;5638:2;5630:6;5623:18;-1:-1:-1;;;5669:2:1;5661:6;5657:15;5650:46;5725:2;5717:6;5713:15;5705:23;;;5764:6;5759:2;5748:9;5744:18;5737:34;5206:571;;;;;:::o;5782:563::-;6060:2;6049:9;6042:21;6023:4;6086:45;6127:2;6116:9;6112:18;6104:6;6086:45;:::i;:::-;6179:9;6171:6;6167:22;6162:2;6151:9;6147:18;6140:50;6214:2;6206:6;6199:18;-1:-1:-1;;;6245:2:1;6237:6;6233:15;6226:38;6293:2;6285:6;6281:15;6273:23;;;6332:6;6327:2;6316:9;6312:18;6305:34;5782:563;;;;;:::o;6350:567::-;6628:2;6617:9;6610:21;6591:4;6654:45;6695:2;6684:9;6680:18;6672:6;6654:45;:::i;:::-;6747:9;6739:6;6735:22;6730:2;6719:9;6715:18;6708:50;6782:2;6774:6;6767:18;-1:-1:-1;;;6813:2:1;6805:6;6801:15;6794:42;6865:2;6857:6;6853:15;6845:23;;;6904:6;6899:2;6888:9;6884:18;6877:34;6350:567;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    4016
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FD1FD10 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8FD1FD10 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xA6A70F66 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xB00EFD35 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xB451C622 EQ PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112EA262 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8445FFB8 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x115 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x20B JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH2 0x95 PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E20706572666F726D20746869732066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0x56C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x789 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP3 SWAP2 SWAP1 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP6 ISZERO ISZERO DUP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP6 ISZERO ISZERO DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP4 MLOAD SWAP2 MLOAD ISZERO ISZERO PUSH3 0x10000 MUL PUSH3 0xFF0000 NOT SWAP3 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR OR AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP2 MLOAD PUSH32 0xBAF4064C4BCE11AB1664AB198D1F4C3902389A7FE4A40279DB2D522716FB729B SWAP2 PUSH2 0x2A6 SWAP2 DUP6 SWAP2 TIMESTAMP SWAP2 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0x56C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x789 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP3 SWAP2 SWAP1 PUSH2 0x6A7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0x56C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x789 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP3 SWAP2 SWAP1 PUSH2 0x6F6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0x56C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x789 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP3 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F3 DUP3 PUSH2 0x3BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BB DUP4 PUSH2 0x3BC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E3 DUP6 DUP3 DUP7 ADD PUSH2 0x410 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51C DUP6 PUSH2 0x4ED JUMP JUMPDEST SWAP4 POP PUSH2 0x52A PUSH1 0x20 DUP7 ADD PUSH2 0x4ED JUMP JUMPDEST SWAP3 POP PUSH2 0x538 PUSH1 0x40 DUP7 ADD PUSH2 0x4ED JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x560 DUP8 DUP3 DUP9 ADD PUSH2 0x410 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E20617574686F72697A65642070726F7669646572000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x5AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5FC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x5A3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x6164645F646961676E6F736973 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x645 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x5A3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x7375626D69745F73796D70746F6D PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 POP POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE DUP3 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6BA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x5A3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x7570646174655F746573745F726573756C7473 PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x709 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x5A3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x185CDCDA59DB97DD195CDD PUSH1 0xAA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x750 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x5A3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x3932B332B92FBA37AFB237B1BA37B9 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID JUMPDEST JUMP DUPN 0xFF 0xBE SWAP6 0xB7 EXTDELEGATECALL 0x2C PUSH25 0x7B65102287621B8B2F70E10BDF8C52F38BA60ADAADFEA26469 PUSH17 0x6673582212205510DC99CA08C9DF720D13 RETURNCONTRACT 0x5D SHL DUP12 PUSH17 0x6F6F2A7AF2CD689EE886A4C6E9562AB564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8FD1FD10"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8FD1FD10"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA6A70F66"
    },
    "60": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB00EFD35"
    },
    "71": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB451C622"
    },
    "82": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "86": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x112EA262"
    },
    "98": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8445FFB8"
    },
    "109": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "113": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x893D20E8"
    },
    "120": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "124": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        4016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "130": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "134": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90"
    },
    "137": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "138": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "140": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "143": {
      "fn": "LogAudits.authorizeProvider",
      "jump": "i",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "144": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "145": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "148": {
      "fn": "LogAudits.authorizeProvider",
      "jump": "i",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "149": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "STOP",
      "path": "0"
    },
    "151": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "155": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "158": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "159": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "161": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49F"
    },
    "164": {
      "fn": "LogAudits.addDiagnosis",
      "jump": "i",
      "offset": [
        2838,
        3071
      ],
      "op": "JUMP",
      "path": "0"
    },
    "165": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "169": {
      "fn": "LogAudits.addDiagnosis",
      "jump": "i",
      "offset": [
        2838,
        3071
      ],
      "op": "JUMP",
      "path": "0"
    },
    "170": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "171": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1736,
        1741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "173": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1736,
        1741
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "174": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "176": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "177": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "184": {
      "op": "SHL"
    },
    "185": {
      "op": "SUB"
    },
    "186": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1736,
        1741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "187": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1736,
        1741
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "188": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1736,
        1741
      ],
      "op": "AND",
      "path": "0"
    },
    "189": {
      "op": "DUP3"
    },
    "190": {
      "op": "MSTORE"
    },
    "191": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "192": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "193": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "194": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "195": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "SUB",
      "path": "0"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "198": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "199": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "200": {
      "fn": "LogAudits.getOwner",
      "offset": [
        1669,
        1748
      ],
      "op": "RETURN",
      "path": "0"
    },
    "201": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "202": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "205": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "208": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "209": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "211": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FD"
    },
    "214": {
      "fn": "LogAudits.submitSymptom",
      "jump": "i",
      "offset": [
        1946,
        2753
      ],
      "op": "JUMP",
      "path": "0"
    },
    "215": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20B"
    },
    "219": {
      "fn": "LogAudits.submitSymptom",
      "jump": "i",
      "offset": [
        1946,
        2753
      ],
      "op": "JUMP",
      "path": "0"
    },
    "220": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "221": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "224": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "227": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "228": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "230": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49F"
    },
    "233": {
      "fn": "LogAudits.updateTestResults",
      "jump": "i",
      "offset": [
        3783,
        4014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "234": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4"
    },
    "238": {
      "fn": "LogAudits.updateTestResults",
      "jump": "i",
      "offset": [
        3783,
        4014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "239": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "240": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "243": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "246": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "247": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "249": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49F"
    },
    "252": {
      "fn": "LogAudits.assignTest",
      "jump": "i",
      "offset": [
        3474,
        3690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "253": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "254": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30C"
    },
    "257": {
      "fn": "LogAudits.assignTest",
      "jump": "i",
      "offset": [
        3474,
        3690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "262": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110"
    },
    "265": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "266": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "268": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49F"
    },
    "271": {
      "fn": "LogAudits.referToDoctor",
      "jump": "i",
      "offset": [
        3166,
        3389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "272": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "273": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x364"
    },
    "276": {
      "fn": "LogAudits.referToDoctor",
      "jump": "i",
      "offset": [
        3166,
        3389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "offset": [
        1406,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "280": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1406,
        1411
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "287": {
      "op": "SHL"
    },
    "288": {
      "op": "SUB"
    },
    "289": {
      "offset": [
        1406,
        1411
      ],
      "op": "AND",
      "path": "0"
    },
    "290": {
      "offset": [
        1392,
        1402
      ],
      "op": "CALLER",
      "path": "0"
    },
    "291": {
      "offset": [
        1392,
        1411
      ],
      "op": "EQ",
      "path": "0"
    },
    "292": {
      "offset": [
        1384,
        1452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "295": {
      "offset": [
        1384,
        1452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "296": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "298": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "305": {
      "op": "SHL"
    },
    "306": {
      "offset": [
        1384,
        1452
      ],
      "op": "DUP2",
      "path": "0"
    },
    "307": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "offset": [
        1384,
        1452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "312": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "DUP3",
      "path": "0"
    },
    "313": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "ADD",
      "path": "0"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "317": {
      "op": "DUP1"
    },
    "318": {
      "op": "DUP3"
    },
    "319": {
      "op": "ADD"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F776E65722063616E20706572666F726D20746869732066756E63"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "356": {
      "op": "DUP3"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "op": "MSTORE"
    },
    "359": {
      "op": "PUSH4",
      "value": "0x3A34B7B7"
    },
    "364": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "366": {
      "op": "SHL"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "369": {
      "op": "DUP3"
    },
    "370": {
      "op": "ADD"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "offset": [
        1384,
        1452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "378": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "379": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "DUP1",
      "path": "0"
    },
    "380": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "381": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "SUB",
      "path": "0"
    },
    "382": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "383": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "384": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1384,
        1452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "391": {
      "op": "SHL"
    },
    "392": {
      "op": "SUB"
    },
    "393": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "AND",
      "path": "0",
      "statement": 1
    },
    "394": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "396": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "398": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "399": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1858,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "401": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "403": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "404": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "405": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "406": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "408": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "409": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "410": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1855
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "411": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "412": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "413": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "415": {
      "op": "NOT"
    },
    "416": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "AND",
      "path": "0"
    },
    "417": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "418": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "419": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "OR",
      "path": "0"
    },
    "420": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "421": {
      "fn": "LogAudits.authorizeProvider",
      "offset": [
        1826,
        1862
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "422": {
      "fn": "LogAudits.authorizeProvider",
      "jump": "o",
      "offset": [
        1754,
        1870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "423": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "offset": [
        1548,
        1558
      ],
      "op": "CALLER",
      "path": "0"
    },
    "425": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "427": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "428": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "429": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "430": {
      "offset": [
        1528,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "432": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "434": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "435": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "437": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "438": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "439": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "440": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "442": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1528,
        1559
      ],
      "op": "AND",
      "path": "0"
    },
    "443": {
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D6"
    },
    "446": {
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "447": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "449": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "offset": [
        1520,
        1590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "458": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "459": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "461": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "ADD",
      "path": "0"
    },
    "462": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "465": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "466": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "469": {
      "fn": "LogAudits.addDiagnosis",
      "jump": "i",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "470": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "471": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2966,
        2970
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 2
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "SUB"
    },
    "480": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "AND",
      "path": "0"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "483": {
      "op": "DUP1"
    },
    "484": {
      "op": "MLOAD"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "487": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "490": {
      "op": "DUP4"
    },
    "491": {
      "op": "CODECOPY"
    },
    "492": {
      "op": "DUP2"
    },
    "493": {
      "op": "MLOAD"
    },
    "494": {
      "op": "SWAP2"
    },
    "495": {
      "op": "MSTORE"
    },
    "496": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2985,
        2990
      ],
      "op": "DUP3",
      "path": "0"
    },
    "497": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        3035,
        3050
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "498": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "500": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "501": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "504": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "505": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "506": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "507": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E9"
    },
    "510": {
      "fn": "LogAudits.addDiagnosis",
      "jump": "i",
      "offset": [
        2940,
        3064
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "514": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "515": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "DUP1",
      "path": "0"
    },
    "516": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "517": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "SUB",
      "path": "0"
    },
    "518": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2940,
        3064
      ],
      "op": "LOG2",
      "path": "0"
    },
    "520": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "POP",
      "path": "0"
    },
    "521": {
      "fn": "LogAudits.addDiagnosis",
      "offset": [
        2838,
        3071
      ],
      "op": "POP",
      "path": "0"
    },
    "522": {
      "fn": "LogAudits.addDiagnosis",
      "jump": "o",
      "offset": [
        2838,
        3071
      ],
      "op": "JUMP",
      "path": "0"
    },
    "523": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "524": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "526": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "527": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "528": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "530": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP2",
      "path": "0"
    },
    "531": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ADD",
      "path": "0"
    },
    "532": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP3",
      "path": "0"
    },
    "533": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "534": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP6",
      "path": "0"
    },
    "535": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "536": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "537": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP2",
      "path": "0"
    },
    "538": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "539": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP5",
      "path": "0"
    },
    "540": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "541": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "542": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "544": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP4",
      "path": "0"
    },
    "546": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ADD",
      "path": "0"
    },
    "547": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "548": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP3",
      "path": "0"
    },
    "549": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "550": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP6",
      "path": "0"
    },
    "551": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "552": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "553": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP4",
      "path": "0"
    },
    "554": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP6",
      "path": "0"
    },
    "555": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "ADD",
      "path": "0"
    },
    "556": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "557": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "DUP2",
      "path": "0"
    },
    "558": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2197,
        2338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "559": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "0"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "562": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "563": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "564": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "565": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "566": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "DUP4",
      "path": "0"
    },
    "567": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "568": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "569": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "570": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "DUP6",
      "path": "0"
    },
    "571": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2194
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "573": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "574": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "575": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "DUP5",
      "path": "0"
    },
    "576": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "577": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "578": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "579": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "580": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "581": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "582": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "583": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "587": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "MUL",
      "path": "0"
    },
    "588": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "592": {
      "op": "NOT"
    },
    "593": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "594": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "595": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "596": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "599": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "MUL",
      "path": "0"
    },
    "600": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "603": {
      "op": "NOT"
    },
    "604": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "605": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "606": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "607": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "608": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "609": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "610": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "AND",
      "path": "0"
    },
    "611": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "614": {
      "op": "NOT"
    },
    "615": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "616": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "617": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "AND",
      "path": "0"
    },
    "618": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "619": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "620": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "621": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "OR",
      "path": "0"
    },
    "622": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "OR",
      "path": "0"
    },
    "623": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "AND",
      "path": "0"
    },
    "624": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "625": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "626": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "627": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "OR",
      "path": "0"
    },
    "628": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "DUP3",
      "path": "0"
    },
    "629": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2171,
        2338
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "630": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 4
    },
    "631": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "632": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xBAF4064C4BCE11AB1664AB198D1F4C3902389A7FE4A40279DB2D522716FB729B"
    },
    "665": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "666": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "669": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "670": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2462,
        2467
      ],
      "op": "DUP6",
      "path": "0"
    },
    "671": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2462,
        2467
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "672": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2611,
        2626
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "673": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2611,
        2626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "674": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "677": {
      "fn": "LogAudits.submitSymptom",
      "jump": "i",
      "offset": [
        2411,
        2746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "681": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "682": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "683": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "684": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "SUB",
      "path": "0"
    },
    "685": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "686": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        2411,
        2746
      ],
      "op": "LOG2",
      "path": "0"
    },
    "687": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "POP",
      "path": "0"
    },
    "688": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "POP",
      "path": "0"
    },
    "689": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "POP",
      "path": "0"
    },
    "690": {
      "fn": "LogAudits.submitSymptom",
      "offset": [
        1946,
        2753
      ],
      "op": "POP",
      "path": "0"
    },
    "691": {
      "fn": "LogAudits.submitSymptom",
      "jump": "o",
      "offset": [
        1946,
        2753
      ],
      "op": "JUMP",
      "path": "0"
    },
    "692": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3783,
        4014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "693": {
      "offset": [
        1548,
        1558
      ],
      "op": "CALLER",
      "path": "0"
    },
    "694": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "696": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "697": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "698": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "699": {
      "offset": [
        1528,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "701": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "703": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "704": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "706": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "708": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "709": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "711": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1528,
        1559
      ],
      "op": "AND",
      "path": "0"
    },
    "712": {
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "715": {
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "716": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "718": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "offset": [
        1520,
        1590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "727": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "728": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "730": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "ADD",
      "path": "0"
    },
    "731": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "734": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "738": {
      "fn": "LogAudits.updateTestResults",
      "jump": "i",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3916,
        3920
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "747": {
      "op": "SHL"
    },
    "748": {
      "op": "SUB"
    },
    "749": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "AND",
      "path": "0"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "752": {
      "op": "DUP1"
    },
    "753": {
      "op": "MLOAD"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "756": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "759": {
      "op": "DUP4"
    },
    "760": {
      "op": "CODECOPY"
    },
    "761": {
      "op": "DUP2"
    },
    "762": {
      "op": "MLOAD"
    },
    "763": {
      "op": "SWAP2"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3935,
        3940
      ],
      "op": "DUP3",
      "path": "0"
    },
    "766": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3991,
        4006
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "767": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "769": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "770": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "773": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "774": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "775": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "776": {
      "fn": "LogAudits.updateTestResults",
      "offset": [
        3890,
        4007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "779": {
      "fn": "LogAudits.updateTestResults",
      "jump": "i",
      "offset": [
        3890,
        4007
      ],
      "op": "JUMP",
      "path": "0"
    },
    "780": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3474,
        3690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "781": {
      "offset": [
        1548,
        1558
      ],
      "op": "CALLER",
      "path": "0"
    },
    "782": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "784": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "785": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "786": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "787": {
      "offset": [
        1528,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "789": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "791": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "792": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "794": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "796": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "797": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "799": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1528,
        1559
      ],
      "op": "AND",
      "path": "0"
    },
    "800": {
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B"
    },
    "803": {
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "804": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "806": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "813": {
      "op": "SHL"
    },
    "814": {
      "offset": [
        1520,
        1590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "816": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "818": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "ADD",
      "path": "0"
    },
    "819": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "822": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "823": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "826": {
      "fn": "LogAudits.assignTest",
      "jump": "i",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "827": {
      "fn": "LogAudits.assignTest",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "828": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3600,
        3604
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "AND",
      "path": "0"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "840": {
      "op": "DUP1"
    },
    "841": {
      "op": "MLOAD"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "844": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "847": {
      "op": "DUP4"
    },
    "848": {
      "op": "CODECOPY"
    },
    "849": {
      "op": "DUP2"
    },
    "850": {
      "op": "MLOAD"
    },
    "851": {
      "op": "SWAP2"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3619,
        3624
      ],
      "op": "DUP3",
      "path": "0"
    },
    "854": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3667,
        3682
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "855": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "857": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "858": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "861": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "862": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "863": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "LogAudits.assignTest",
      "offset": [
        3574,
        3683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F6"
    },
    "867": {
      "fn": "LogAudits.assignTest",
      "jump": "i",
      "offset": [
        3574,
        3683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "868": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3166,
        3389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "869": {
      "offset": [
        1548,
        1558
      ],
      "op": "CALLER",
      "path": "0"
    },
    "870": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "872": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "873": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "875": {
      "offset": [
        1528,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "877": {
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "879": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "880": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "882": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "883": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "884": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "885": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "887": {
      "branch": 8,
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1528,
        1559
      ],
      "op": "AND",
      "path": "0"
    },
    "888": {
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "891": {
      "branch": 8,
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "892": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "894": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "901": {
      "op": "SHL"
    },
    "902": {
      "offset": [
        1520,
        1590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "903": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "904": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "906": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "ADD",
      "path": "0"
    },
    "907": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "910": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "911": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "914": {
      "fn": "LogAudits.referToDoctor",
      "jump": "i",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "915": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        1520,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "916": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3295,
        3299
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 7
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "op": "SUB"
    },
    "925": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "AND",
      "path": "0"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "928": {
      "op": "DUP1"
    },
    "929": {
      "op": "MLOAD"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "932": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "935": {
      "op": "DUP4"
    },
    "936": {
      "op": "CODECOPY"
    },
    "937": {
      "op": "DUP2"
    },
    "938": {
      "op": "MLOAD"
    },
    "939": {
      "op": "SWAP2"
    },
    "940": {
      "op": "MSTORE"
    },
    "941": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3314,
        3319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "942": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3366,
        3381
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "943": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "945": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "946": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "949": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "950": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "951": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "952": {
      "fn": "LogAudits.referToDoctor",
      "offset": [
        3269,
        3382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73D"
    },
    "955": {
      "fn": "LogAudits.referToDoctor",
      "jump": "i",
      "offset": [
        3269,
        3382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "956": {
      "op": "JUMPDEST"
    },
    "957": {
      "op": "DUP1"
    },
    "958": {
      "op": "CALLDATALOAD"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "op": "DUP2"
    },
    "968": {
      "op": "AND"
    },
    "969": {
      "op": "DUP2"
    },
    "970": {
      "op": "EQ"
    },
    "971": {
      "op": "PUSH2",
      "value": "0x3D3"
    },
    "974": {
      "op": "JUMPI"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "977": {
      "op": "DUP1"
    },
    "978": {
      "op": "REVERT"
    },
    "979": {
      "op": "JUMPDEST"
    },
    "980": {
      "op": "SWAP2"
    },
    "981": {
      "op": "SWAP1"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "jump": "o",
      "op": "JUMP"
    },
    "984": {
      "op": "JUMPDEST"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "989": {
      "op": "DUP3"
    },
    "990": {
      "op": "DUP5"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "op": "SLT"
    },
    "993": {
      "op": "ISZERO"
    },
    "994": {
      "op": "PUSH2",
      "value": "0x3EA"
    },
    "997": {
      "op": "JUMPI"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1000": {
      "op": "DUP1"
    },
    "1001": {
      "op": "REVERT"
    },
    "1002": {
      "op": "JUMPDEST"
    },
    "1003": {
      "op": "PUSH2",
      "value": "0x3F3"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x3BC"
    },
    "1010": {
      "jump": "i",
      "op": "JUMP"
    },
    "1011": {
      "op": "JUMPDEST"
    },
    "1012": {
      "op": "SWAP4"
    },
    "1013": {
      "op": "SWAP3"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "jump": "o",
      "op": "JUMP"
    },
    "1018": {
      "op": "JUMPDEST"
    },
    "1019": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1039": {
      "op": "REVERT"
    },
    "1040": {
      "op": "JUMPDEST"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "op": "DUP3"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1046": {
      "op": "DUP4"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "SLT"
    },
    "1049": {
      "op": "PUSH2",
      "value": "0x421"
    },
    "1052": {
      "op": "JUMPI"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1055": {
      "op": "DUP1"
    },
    "1056": {
      "op": "REVERT"
    },
    "1057": {
      "op": "JUMPDEST"
    },
    "1058": {
      "op": "DUP2"
    },
    "1059": {
      "op": "CALLDATALOAD"
    },
    "1060": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1069": {
      "op": "DUP2"
    },
    "1070": {
      "op": "GT"
    },
    "1071": {
      "op": "ISZERO"
    },
    "1072": {
      "op": "PUSH2",
      "value": "0x43B"
    },
    "1075": {
      "op": "JUMPI"
    },
    "1076": {
      "op": "PUSH2",
      "value": "0x43B"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x3FA"
    },
    "1082": {
      "jump": "i",
      "op": "JUMP"
    },
    "1083": {
      "op": "JUMPDEST"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1086": {
      "op": "MLOAD"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1089": {
      "op": "DUP3"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1093": {
      "op": "NOT"
    },
    "1094": {
      "op": "SWAP1"
    },
    "1095": {
      "op": "DUP2"
    },
    "1096": {
      "op": "AND"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1099": {
      "op": "ADD"
    },
    "1100": {
      "op": "AND"
    },
    "1101": {
      "op": "DUP2"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1112": {
      "op": "DUP2"
    },
    "1113": {
      "op": "GT"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "DUP3"
    },
    "1116": {
      "op": "LT"
    },
    "1117": {
      "op": "OR"
    },
    "1118": {
      "op": "ISZERO"
    },
    "1119": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1122": {
      "op": "JUMPI"
    },
    "1123": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1126": {
      "op": "PUSH2",
      "value": "0x3FA"
    },
    "1129": {
      "jump": "i",
      "op": "JUMP"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1133": {
      "op": "MSTORE"
    },
    "1134": {
      "op": "DUP2"
    },
    "1135": {
      "op": "DUP2"
    },
    "1136": {
      "op": "MSTORE"
    },
    "1137": {
      "op": "DUP4"
    },
    "1138": {
      "op": "DUP3"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "DUP6"
    },
    "1144": {
      "op": "LT"
    },
    "1145": {
      "op": "ISZERO"
    },
    "1146": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "1149": {
      "op": "JUMPI"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1152": {
      "op": "DUP1"
    },
    "1153": {
      "op": "REVERT"
    },
    "1154": {
      "op": "JUMPDEST"
    },
    "1155": {
      "op": "DUP2"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1158": {
      "op": "DUP6"
    },
    "1159": {
      "op": "ADD"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1162": {
      "op": "DUP4"
    },
    "1163": {
      "op": "ADD"
    },
    "1164": {
      "op": "CALLDATACOPY"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1167": {
      "op": "SWAP2"
    },
    "1168": {
      "op": "DUP2"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "op": "SWAP2"
    },
    "1174": {
      "op": "SWAP1"
    },
    "1175": {
      "op": "SWAP2"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "SWAP4"
    },
    "1178": {
      "op": "SWAP3"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "jump": "o",
      "op": "JUMP"
    },
    "1183": {
      "op": "JUMPDEST"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1186": {
      "op": "DUP1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1189": {
      "op": "DUP4"
    },
    "1190": {
      "op": "DUP6"
    },
    "1191": {
      "op": "SUB"
    },
    "1192": {
      "op": "SLT"
    },
    "1193": {
      "op": "ISZERO"
    },
    "1194": {
      "op": "PUSH2",
      "value": "0x4B2"
    },
    "1197": {
      "op": "JUMPI"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1200": {
      "op": "DUP1"
    },
    "1201": {
      "op": "REVERT"
    },
    "1202": {
      "op": "JUMPDEST"
    },
    "1203": {
      "op": "PUSH2",
      "value": "0x4BB"
    },
    "1206": {
      "op": "DUP4"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x3BC"
    },
    "1210": {
      "jump": "i",
      "op": "JUMP"
    },
    "1211": {
      "op": "JUMPDEST"
    },
    "1212": {
      "op": "SWAP2"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1216": {
      "op": "DUP4"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "op": "CALLDATALOAD"
    },
    "1219": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1228": {
      "op": "DUP2"
    },
    "1229": {
      "op": "GT"
    },
    "1230": {
      "op": "ISZERO"
    },
    "1231": {
      "op": "PUSH2",
      "value": "0x4D7"
    },
    "1234": {
      "op": "JUMPI"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1237": {
      "op": "DUP1"
    },
    "1238": {
      "op": "REVERT"
    },
    "1239": {
      "op": "JUMPDEST"
    },
    "1240": {
      "op": "PUSH2",
      "value": "0x4E3"
    },
    "1243": {
      "op": "DUP6"
    },
    "1244": {
      "op": "DUP3"
    },
    "1245": {
      "op": "DUP7"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "op": "PUSH2",
      "value": "0x410"
    },
    "1250": {
      "jump": "i",
      "op": "JUMP"
    },
    "1251": {
      "op": "JUMPDEST"
    },
    "1252": {
      "op": "SWAP2"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "op": "SWAP3"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "SWAP3"
    },
    "1258": {
      "op": "SWAP1"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "jump": "o",
      "op": "JUMP"
    },
    "1261": {
      "op": "JUMPDEST"
    },
    "1262": {
      "op": "DUP1"
    },
    "1263": {
      "op": "CALLDATALOAD"
    },
    "1264": {
      "op": "DUP1"
    },
    "1265": {
      "op": "ISZERO"
    },
    "1266": {
      "op": "ISZERO"
    },
    "1267": {
      "op": "DUP2"
    },
    "1268": {
      "op": "EQ"
    },
    "1269": {
      "op": "PUSH2",
      "value": "0x3D3"
    },
    "1272": {
      "op": "JUMPI"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "op": "REVERT"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1280": {
      "op": "DUP1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1283": {
      "op": "DUP1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1286": {
      "op": "DUP6"
    },
    "1287": {
      "op": "DUP8"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "op": "SLT"
    },
    "1290": {
      "op": "ISZERO"
    },
    "1291": {
      "op": "PUSH2",
      "value": "0x513"
    },
    "1294": {
      "op": "JUMPI"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "op": "DUP1"
    },
    "1298": {
      "op": "REVERT"
    },
    "1299": {
      "op": "JUMPDEST"
    },
    "1300": {
      "op": "PUSH2",
      "value": "0x51C"
    },
    "1303": {
      "op": "DUP6"
    },
    "1304": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1307": {
      "jump": "i",
      "op": "JUMP"
    },
    "1308": {
      "op": "JUMPDEST"
    },
    "1309": {
      "op": "SWAP4"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1316": {
      "op": "DUP7"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1321": {
      "jump": "i",
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "SWAP3"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1330": {
      "op": "DUP7"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1335": {
      "jump": "i",
      "op": "JUMP"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "SWAP2"
    },
    "1338": {
      "op": "POP"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1341": {
      "op": "DUP6"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "CALLDATALOAD"
    },
    "1344": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1353": {
      "op": "DUP2"
    },
    "1354": {
      "op": "GT"
    },
    "1355": {
      "op": "ISZERO"
    },
    "1356": {
      "op": "PUSH2",
      "value": "0x554"
    },
    "1359": {
      "op": "JUMPI"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1362": {
      "op": "DUP1"
    },
    "1363": {
      "op": "REVERT"
    },
    "1364": {
      "op": "JUMPDEST"
    },
    "1365": {
      "op": "PUSH2",
      "value": "0x560"
    },
    "1368": {
      "op": "DUP8"
    },
    "1369": {
      "op": "DUP3"
    },
    "1370": {
      "op": "DUP9"
    },
    "1371": {
      "op": "ADD"
    },
    "1372": {
      "op": "PUSH2",
      "value": "0x410"
    },
    "1375": {
      "jump": "i",
      "op": "JUMP"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "SWAP2"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "op": "SWAP3"
    },
    "1381": {
      "op": "SWAP6"
    },
    "1382": {
      "op": "SWAP2"
    },
    "1383": {
      "op": "SWAP5"
    },
    "1384": {
      "op": "POP"
    },
    "1385": {
      "op": "SWAP3"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "jump": "o",
      "op": "JUMP"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1391": {
      "op": "DUP1"
    },
    "1392": {
      "op": "DUP3"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1396": {
      "op": "SWAP1"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH32",
      "value": "0x4E6F7420616E20617574686F72697A65642070726F7669646572000000000000"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "op": "MSTORE"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1440": {
      "op": "ADD"
    },
    "1441": {
      "op": "SWAP1"
    },
    "1442": {
      "jump": "o",
      "op": "JUMP"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "DUP2"
    },
    "1447": {
      "op": "MLOAD"
    },
    "1448": {
      "op": "DUP1"
    },
    "1449": {
      "op": "DUP5"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "DUP2"
    },
    "1455": {
      "op": "DUP2"
    },
    "1456": {
      "op": "LT"
    },
    "1457": {
      "op": "ISZERO"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1461": {
      "op": "JUMPI"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "DUP2"
    },
    "1465": {
      "op": "DUP6"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "DUP2"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "op": "MLOAD"
    },
    "1470": {
      "op": "DUP7"
    },
    "1471": {
      "op": "DUP4"
    },
    "1472": {
      "op": "ADD"
    },
    "1473": {
      "op": "DUP3"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1480": {
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "DUP7"
    },
    "1489": {
      "op": "ADD"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1496": {
      "op": "NOT"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1499": {
      "op": "DUP4"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "AND"
    },
    "1502": {
      "op": "DUP6"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "SWAP2"
    },
    "1506": {
      "op": "POP"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "op": "SWAP3"
    },
    "1509": {
      "op": "SWAP2"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "jump": "o",
      "op": "JUMP"
    },
    "1513": {
      "op": "JUMPDEST"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1516": {
      "op": "DUP2"
    },
    "1517": {
      "op": "MSTORE"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1520": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1525": {
      "op": "DUP4"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "DUP6"
    },
    "1528": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1531": {
      "jump": "i",
      "op": "JUMP"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "DUP3"
    },
    "1534": {
      "op": "DUP2"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1538": {
      "op": "DUP5"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1543": {
      "op": "DUP2"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "PUSH13",
      "value": "0x6164645F646961676E6F736973"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1564": {
      "op": "DUP3"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "MSTORE"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1569": {
      "op": "DUP2"
    },
    "1570": {
      "op": "ADD"
    },
    "1571": {
      "op": "SWAP2"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "op": "POP"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1577": {
      "op": "DUP4"
    },
    "1578": {
      "op": "ADD"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "SWAP4"
    },
    "1581": {
      "op": "SWAP3"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "jump": "o",
      "op": "JUMP"
    },
    "1586": {
      "op": "JUMPDEST"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1589": {
      "op": "DUP2"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1593": {
      "op": "PUSH2",
      "value": "0x645"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1598": {
      "op": "DUP4"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "DUP7"
    },
    "1601": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1604": {
      "jump": "i",
      "op": "JUMP"
    },
    "1605": {
      "op": "JUMPDEST"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "DUP2"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1611": {
      "op": "DUP5"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "op": "MSTORE"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1616": {
      "op": "DUP2"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH14",
      "value": "0x7375626D69745F73796D70746F6D"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1643": {
      "op": "DUP2"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "SWAP2"
    },
    "1646": {
      "op": "POP"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "op": "DUP4"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1651": {
      "op": "DUP4"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "DUP3"
    },
    "1655": {
      "op": "SLOAD"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1658": {
      "op": "DUP2"
    },
    "1659": {
      "op": "AND"
    },
    "1660": {
      "op": "ISZERO"
    },
    "1661": {
      "op": "ISZERO"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1664": {
      "op": "DUP5"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1669": {
      "op": "DUP2"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "1672": {
      "op": "SHR"
    },
    "1673": {
      "op": "AND"
    },
    "1674": {
      "op": "ISZERO"
    },
    "1675": {
      "op": "ISZERO"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1678": {
      "op": "DUP5"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1683": {
      "op": "DUP2"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "1686": {
      "op": "SHR"
    },
    "1687": {
      "op": "AND"
    },
    "1688": {
      "op": "ISZERO"
    },
    "1689": {
      "op": "ISZERO"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1692": {
      "op": "DUP5"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "op": "MSTORE"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "SWAP5"
    },
    "1697": {
      "op": "SWAP4"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "jump": "o",
      "op": "JUMP"
    },
    "1703": {
      "op": "JUMPDEST"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1706": {
      "op": "DUP2"
    },
    "1707": {
      "op": "MSTORE"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1710": {
      "op": "PUSH2",
      "value": "0x6BA"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1715": {
      "op": "DUP4"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "DUP6"
    },
    "1718": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1721": {
      "jump": "i",
      "op": "JUMP"
    },
    "1722": {
      "op": "JUMPDEST"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "DUP2"
    },
    "1725": {
      "op": "SUB"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1728": {
      "op": "DUP5"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "op": "MSTORE"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1733": {
      "op": "DUP2"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "op": "PUSH19",
      "value": "0x7570646174655F746573745F726573756C7473"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1760": {
      "op": "DUP3"
    },
    "1761": {
      "op": "ADD"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1765": {
      "op": "DUP2"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "op": "SWAP2"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "op": "DUP3"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1773": {
      "op": "DUP4"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "SWAP4"
    },
    "1777": {
      "op": "SWAP3"
    },
    "1778": {
      "op": "POP"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "op": "POP"
    },
    "1781": {
      "jump": "o",
      "op": "JUMP"
    },
    "1782": {
      "op": "JUMPDEST"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1785": {
      "op": "DUP2"
    },
    "1786": {
      "op": "MSTORE"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0x709"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1794": {
      "op": "DUP4"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "op": "DUP6"
    },
    "1797": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1800": {
      "jump": "i",
      "op": "JUMP"
    },
    "1801": {
      "op": "JUMPDEST"
    },
    "1802": {
      "op": "DUP3"
    },
    "1803": {
      "op": "DUP2"
    },
    "1804": {
      "op": "SUB"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1807": {
      "op": "DUP5"
    },
    "1808": {
      "op": "ADD"
    },
    "1809": {
      "op": "MSTORE"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1812": {
      "op": "DUP2"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH11",
      "value": "0x185CDCDA59DB97DD195CDD"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1831": {
      "op": "DUP3"
    },
    "1832": {
      "op": "ADD"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1836": {
      "op": "DUP2"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "SWAP2"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "op": "DUP3"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1844": {
      "op": "DUP4"
    },
    "1845": {
      "op": "ADD"
    },
    "1846": {
      "op": "MSTORE"
    },
    "1847": {
      "op": "SWAP4"
    },
    "1848": {
      "op": "SWAP3"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "op": "POP"
    },
    "1851": {
      "op": "POP"
    },
    "1852": {
      "jump": "o",
      "op": "JUMP"
    },
    "1853": {
      "op": "JUMPDEST"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1856": {
      "op": "DUP2"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1860": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1865": {
      "op": "DUP4"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "DUP6"
    },
    "1868": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1871": {
      "jump": "i",
      "op": "JUMP"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "DUP3"
    },
    "1874": {
      "op": "DUP2"
    },
    "1875": {
      "op": "SUB"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1878": {
      "op": "DUP5"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1883": {
      "op": "DUP2"
    },
    "1884": {
      "op": "MSTORE"
    },
    "1885": {
      "op": "PUSH15",
      "value": "0x3932B332B92FBA37AFB237B1BA37B9"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "op": "DUP3"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "MSTORE"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "ADD"
    },
    "1913": {
      "op": "SWAP2"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "DUP3"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1919": {
      "op": "DUP4"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "SWAP4"
    },
    "1923": {
      "op": "SWAP3"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "op": "POP"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9e11d947a673d6f92ed149f915915668fecbd475",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract LogAudits {\n    // Define the struct for consent information\n    struct Consent {\n        bool treatment;\n        bool referral;\n        bool research;\n    }\n\n    // Mapping to store consent data for each user (address)\n    mapping(address => Consent) private userConsent;\n    // Mapping to store authorized addresses (providers can be doctors, lab staff, etc.)\n    mapping(address => bool) private authorizedProviders;\n\n    // Define the structure of the event\n    event PatientLogged(\n        address indexed user,            // The user performing the action\n        string role,                     // Role of the user (e.g., patient, doctor, lab staff)\n        string action_type,              // The type of action (e.g., submit_symptom, add_diagnosis)\n        uint256 created_at,              // Timestamp of the action\n        Consent granted_consent          // Consent for the action (only used in submit_symptom)\n    );\n\n    event ActionLogged(\n        address indexed user,            // The user performing the action\n        string role,                     // Role of the user (e.g., patient, doctor, lab staff)\n        string action_type,              // The type of action (e.g., submit_symptom, add_diagnosis)\n        uint256 created_at\n    );\n\n    address owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can perform this function\");\n        _;\n    }\n\n    modifier onlyAuthorizedProvider() {\n        require(authorizedProviders[msg.sender], \"Not an authorized provider\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function getOwner() public view returns (address) {\n        return owner;\n    }\n\n    function authorizeProvider(address provider) public onlyOwner {\n        authorizedProviders[provider] = true;\n\n    }\n\n\n    // Function to submit a symptom with consent (only for patients)\n    function submitSymptom(\n        bool _treatmentConsent,\n        bool _referralConsent,\n        bool _researchConsent,\n        string memory _role\n    ) public {\n        // Store the consent information in the mapping\n        userConsent[msg.sender] = Consent({\n            treatment: _treatmentConsent,\n            referral: _referralConsent,\n            research: _researchConsent\n        });\n\n        // Emit the event logging the action and consent\n        emit PatientLogged(\n            msg.sender,\n            _role,                          // Role passed as a parameter\n            \"submit_symptom\",               // Action type: submit_symptom\n            block.timestamp,                // Timestamp of the action\n            userConsent[msg.sender]         // The consent granted\n        );\n    }\n\n    // Function for a doctor to add a diagnosis (requires a valid doctor role)\n    function addDiagnosis(address user, string memory _role) public onlyAuthorizedProvider {\n        emit ActionLogged(\n            user, \n            _role, \n            \"add_diagnosis\", \n            block.timestamp\n            );\n    }\n\n    // Function for referring a patient to another doctor (requires a valid doctor role)\n    function referToDoctor(address user, string memory _role) public onlyAuthorizedProvider {\n        emit ActionLogged(\n            user, \n            _role, \n            \"refer_to_doctor\", \n            block.timestamp);\n    }\n\n    // Function for assigning a test to the lab (requires a valid doctor role)\n    function assignTest(address user, string memory _role) public onlyAuthorizedProvider {\n        emit ActionLogged(\n            user, \n            _role, \n            \"assign_test\", \n            block.timestamp);\n    }\n\n    // Function for lab staff to update test results (requires a valid lab staff role)\n    function updateTestResults(address user, string memory _role) public onlyAuthorizedProvider {\n        emit ActionLogged(\n            user, \n            _role, \n            \"update_test_results\", \n            block.timestamp);\n    }\n}\n",
  "sourceMap": "57:3959:0:-:0;;;1614:49;;;;;;;;;-1:-1:-1;1638:5:0;:18;;-1:-1:-1;;;;;;1638:18:0;1646:10;1638:18;;;57:3959;;;;;;",
  "sourcePath": "contracts/LogAudits.sol",
  "type": "contract"
}